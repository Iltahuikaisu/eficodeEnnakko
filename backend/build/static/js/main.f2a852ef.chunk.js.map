{"version":3,"sources":["content/geocoding.js","content/timetable.js","App.js","index.js"],"names":["Geocoding","address","axios","get","client","ApolloClient","uri","TimetableToEficode","Geo","then","respGeo","query","gql","data","bbox","resp","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"6OAQeA,EALG,SAACC,GACf,OAAOC,IAAMC,IAAN,6DAAgEF,K,wrBCA3E,IAAMG,EAAS,IAAIC,IAAa,CAC5BC,IAAI,oEAiDOC,EA/CY,WAwCvB,OAvCAC,EAAI,+BAA+BC,MAAK,SAACC,GACrCN,EAAOO,MAAM,CACLA,MAAOC,YAAF,IAEKF,EAAQG,KAAKC,KAAK,GAAYJ,EAAQG,KAAKC,KAAK,MA2BhEL,MAAK,SAACM,GACJC,QAAQC,IAAI,uBACZD,QAAQC,IAAIF,SAOhB,+BCjCOG,MAXf,WACE,OACD,6BACI,+CAGA,kBAAC,EAAD,QCNLC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f2a852ef.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst Geocoding = (address) => {\r\n    return(axios.get(`http://api.digitransit.fi/geocoding/v1/search?text=${address}`)\r\n    )\r\n}\r\n\r\nexport default Geocoding","import React, {useState} from \"react\";\r\nimport ApolloClient, {gql} from 'apollo-boost'\r\nimport Geo from './geocoding'\r\n\r\nconst client = new ApolloClient({\r\n    uri:'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql'});\r\n\r\nconst TimetableToEficode = () => {\r\n    Geo(' Pohjoinen Rautatiekatu, 25').then((respGeo) => {\r\n        client.query({\r\n                query: gql`{\r\n        plan(\r\n            from: {lon: ${respGeo.data.bbox[2]}, lat: ${respGeo.data.bbox[3]}}\r\n        to: {lat: 60.175294, lon: 24.684855}\r\n        numItineraries: 3\r\n    ) {\r\n        itineraries {\r\n            legs {\r\n                from {\r\n                    lat\r\n                    lon\r\n                    name\r\n                    stop {\r\n                        code\r\n                        name\r\n                    }\r\n                }\r\n                startTime\r\n                endTime\r\n                mode\r\n                duration\r\n                realTime\r\n                distance\r\n                transitLeg\r\n            }\r\n        }\r\n    }\r\n}`\r\n            }\r\n        ).then((resp) => {\r\n            console.log('response to graphQL')\r\n            console.log(resp)\r\n        })\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimetableToEficode","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport TimetableToEficode from './content/timetable'\r\n\r\nfunction App() {\r\n  return (\r\n <div>\r\n     <h2>\r\n         Eficode ennakko\r\n     </h2>\r\n     <TimetableToEficode/>\r\n </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}